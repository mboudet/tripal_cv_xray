<?php

/**
 *Hook Schema
 */

function tripal_cv_xray_schema() {
  $schema = [];

  $schema['tripal_cvterm_entity_index'] = tripal_cvterm_entity_index_schema();
  $schema['tripal_cvterm_entity_linker'] = tripal_cvterm_entity_linker();

  return $schema;

}


function tripal_cvterm_entity_linker() {

  $schema = [
    'description' => 'This table is used for tracking cvterm annotations.',
    'fields' => [
      'cvterm_entity_id' => [
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'cvterm_id' => [
        'description' => 'chado cvterm id',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'database' => [
        'description' => 'Database shortname for term.',
        'type' => 'varchar',
        'not null' => TRUE,
      ],
      'accession' => [
        'description' => 'Term accession.',
        'type' => 'varchar',
        'not null' => TRUE,
      ],

      'entity_id' => [
        'description' => 'entity id',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      'cvterm_entity_id',
    ],
    'indexes' => [
      'cvterm_id_index' => ['cvterm_id'],
      'entity_id_index' => ['entity_id'],
      'accession_index' => ['accession'],
      'db_index' => ['database'],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'uid' => 'cvterm_id',
        ],
      ],
      'entity_id' => [
        'table' => 'tripal_entity',
        'columns' => [
          'uid' => 'id',
        ],
      ],
    ],
  ];

  return $schema;

}

/**
 * Tripal cvterm entity index schema
 *
 * This schema is for storing cvterm usage for entities.  The CVterm browser
 * uses this schema to provide filterable lists of entities that associate with
 * a given CVterm and its child terms.
 *
 * @return array
 */
function tripal_cvterm_entity_index_schema() {

  $schema = [
    'description' => 'This table is used for tracking cvterm annotations.',
    'fields' => [
      'cvterm_entity_id' => [
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'cvterm_id' => [
        'description' => 'chado cvterm id',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'database' => [
        'description' => 'Database shortname for term.',
        'type' => 'varchar',
        'not null' => TRUE,
      ],
      'accession' => [
        'description' => 'Term accession.',
        'type' => 'varchar',
        'not null' => TRUE,
      ],
      'bundle_id' => [
        'description' => 'Bundle table.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'entities_array' => [
        'description' => 'Entities associated with this term and all child terms',
        'type' => 'text',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      'cvterm_entity_id',
    ],
    'indexes' => [
      'accession' => ['accession'],
      'db' => ['database'],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'uid' => 'cvterm_id',
        ],
      ],
    ],
  ];

  return $schema;

}

function tripal_cv_xray_uninstall() {
  if (db_table_exists('tripal_cvterm_entity_index')) {
    db_drop_table("tripal_cvterm_entity_index");
  }

  if (db_table_exists('tripal_cvterm_entity_linker')) {
    db_drop_table('tripal_cvterm_entity_linker');
  }
}

function tripal_cv_xray_update_7100() {
  if(!db_table_exists('tripal_cvterm_entity_linker')) {
    $schema = tripal_cvterm_entity_linker();

    db_create_table('tripal_cvterm_entity_linker', $schema);
  }
}
