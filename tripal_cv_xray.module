<?php

//Load in required files

require_once "includes/ChadoEntityChildCvterm.inc";
require_once "includes/api/tripal_cv_xray.api.inc";

/**
 * implement hook menu
 */

function tripal_cv_xray_menu() {
  $admin_url_base = 'admin/tripal/extension/tripal_cv_xray';

  $items[$admin_url_base] = [
    'title' => 'Tripal CV X-ray',
    'description' => t('The CV-X-ray module allows you to create browsable CV trees with entities mapped onto the terms.  For example, you can create a GO tree for organisms that shows features for the organism.  These admin settings are for populating the tables necessary for these trees to work.'),
    'access arguments' => [' tripal cv xray'],
    'page callback' => 'drupal_get_form',
    'page arguments' => ['tripal_cv_xray_cvterm_entity_form'],
    'file' => 'includes/tripal_cv_xray_cvterm_entity_config.form.inc',
    'file_path' => drupal_get_path('module', 'tripal_cv_xray'),
  ];


  $items['cv_entities/%/%'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('Matching Entities'),
    'description' => 'Mapped entities associated with a CVterm',
    'page callback' => 'tripal_cv_xray_entity_view',
    'page arguments' => array(1, 2), //cv and entity array
    'file' => 'includes/tripal_cv_xray_entity_results.inc',
    'access arguments' => array('view content'),
    'file_path' => drupal_get_path('module', 'tripal_cv_xray'),
  );

  $items['cv_entities/lookup/%/%/children'] = array(
    'access arguments' => array('access content'),
    'page callback' => 'data__ontology_data_formatter::tripal_cv_xray_entity_child_lookup_ajax',
    'page arguments' => array(2, 3),
    'file' => 'includes/tripal_cv_xray_entity_results.inc',
    'file path' => drupal_get_path('module', 'tripal'),
    'type' => MENU_CALLBACK,
  );

  return $items;

}
